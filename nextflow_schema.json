{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-template",
    "description": "Nextflow workflow template repository.",
    "url": "https://github.com/epi2me-labs/wf-template",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all user-facing files."
                },
                "ref": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A fasta file containing the reference genome to map against"
                },
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "An optional sample sheet (see test_data/sample_sheet.csv). If provided then the ubam,vcf,sample and cutter parameters are ignored"
                },
                "ubam": {
                    "type": "string",
                    "format": "file-path",
                    "description": "An unaligned bam file or containing Pore-C concatemer sequences"
                },
                "vcf": {
                    "type": "string",
                    "format": "file-path",
                    "description": "An optional phased VCF file that will be used to haplotag alignments"
                },
                "sample": {
                    "type": "string",
                    "description": "A sample name for non-multiplexed data. Permissible if passing a file or directory of .ubam(.gz)."
                },
                "cutter": {
                    "type": "string",
                    "description": "The enzyme used in the restriction digest"
                },
                "chunk_size": {
                    "type": "integer",
                    "default": -1,
                    "description": "Split input bam into reads of this size"
                },
                "threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Set max number of threads to use for more intense processes (limited by config executor cpus)"
                },
                "ubam_map_threads": {
                    "type": "integer",
                    "default": 12,
                    "description": "Set max number of threads to use for aligning reads from uBAM (limited by config executor cpus)"
                },
                "ubam_sort_threads": {
                    "type": "integer",
                    "default": 8,
                    "description": "Set max number of threads to use for sorting and indexing aligned reads from uBAM (limited by config executor cpus)"
                },
                "ubam_bam2fq_threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Set max number of threads to use for uncompressing uBAM and generating FASTQ for alignment (limited by config executor cpus)"
                }
            },
            "required": ["ref"]
        },
        "porec": {
            "title": "Pore-C Tools",
            "type": "object",
            "description": "Parameters to control the pore-c tools",
            "properties": {
                "minimap2_settings": {
                    "type": "string",
                    "default": "-x map-ont",
                    "description": "The minimap2 settings for mapping monomers"
                },
                "coverage": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Calculate restriction-fragment coverage using mosdepth"
                }
            }
        },
        "chromunity": {
            "title": "Chromunity",
            "type": "object",
            "description": "Create files for Chromunity analyses",
            "properties": {
                "chromunity": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Create parquet files for Chromunity"
                },
                "chromunity_merge_distance": {
                    "type": "integer",
                    "default": null,
                    "description": "Merge colinear alignments separated by less than this distance into a single monomer"
                }
            }
        },
        "4DN": {
            "title": "4DN files",
            "type": "object",
            "description": "Create files for the 4D nucleome toolset",
            "properties": {
                "pairs": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Create a 4DN-format pairs file (also calculate stats)."
                },
                "mcool": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Create a multi-resolution cooler file"
                },
                "cool_bin_size": {
                    "type": "integer",
                    "default": 1000,
                    "description": "The resolution of the base cooler file"
                },
                "mcool_resolutions": {
                    "type": "string",
                    "default": "4DN",
                    "description": "The resolutions of the mcool file (see cooler documentation for details)."
                }
            }
        },
        "Pair-end BAM files": {
            "title": "Paired-end BAM",
            "type": "object",
            "description": "Create mock paired-end BAM files for legacy tools",
            "properties": {
                "paired_end": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Create mock paired-end BAM files."
                },
                "paired_end_minimum_distance": {
                    "type": "integer",
                    "default": null,
                    "description": "Remove trans pairs and cis- pairs separated by a distance shorter than this"
                },
                "paired_end_maximum_distance": {
                    "type": "integer",
                    "default": null,
                    "description": "Remove trans pairs and cis- pairs separated by a distance greater than this"
                }
            }
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Enable to prevent sending a workflow ping."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "wf-template"
        },
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v0.2.0",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThis section of documentation typically contains an overview of the workflow in terms of motivation\nand bioinformatics methods, listing any key tools or algorithms employed, whilst also describing its\nrange of use-cases and what a suitable input dataset should look like.\n\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n"
    }
}
