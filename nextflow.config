//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.

params {
    help = false
    sample_sheet = null
    ubam = null
    ref = null
    cutter = null
    out_dir = 'output'
    chunk_size = -1
    sample_id = null
    vcf = null

    coverage = false

    // 4DN
    pairs = false
    mcool = false
    cool_bin_size = 1000
    mcool_resolutions = '4DN'

    //TODO add to schema
    minimap2_settings = '-x map-ont'

    threads = 4
    ubam_map_threads = 12
    ubam_sort_threads = 3
    ubam_bam2fq_threads = 1

    wfversion = 'v0.3.1' // specifies the container image version, not the workflow version
    aws_image_prefix = null
    aws_queue = null
    report_name = 'report'
    disable_ping = false

    process_label = 'wfdefault'
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wfversion,wf'

    wf {
        name = 'wf-porec'
        example_cmd = [
            '--ubam test_data/porec_test.concatemers.bam --ref test_data/porec_test.genome.fasta --phased_vcf test_data/porec_test.phased_variants.vcf.gz --mcool_resolutions 10,20,30'
        ]
        container_sha = 'sha1a2b409e535aaa8825bcf33f96fb7602b120bf3d'
        agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-porec'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-template'
    description     = 'Template workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.05.0'
//version       = 'v0.0.7'  // TODO: do switch to this?
}

executor {
    $local {
        cpus = 32
        memory = '8 GB'
    }
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wftemplate {
        container = "ontresearch/wf-template:${params.wf.container_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
    withName: "merge_namesorted_bams" {
        publishDir = [
            path: { "${params.out_dir}/bams/" },
            mode: "copy",
            pattern: '*.bam'
        ]
    }
    withName: "merge_coordsorted_bams" {
        publishDir = [
            path: { "${params.out_dir}/bams/" },
            mode: "copy",
            pattern: '*.{bam,csi,bai}'
        ]
    }
    withName: "merge_pairs|merge_pairs_stats|merge_mcools|create_restriction_bed" {
        publishDir = [
            path: { "${params.out_dir}/pairs/" },
            mode: "copy",
            pattern: '*.{gz,stats.txt,bed,mcool}'
        ]
    }
    withName: "mosdepth_coverage" {
        publishDir = [
            path: { "${params.out_dir}/coverage/" },
            mode: "copy",
            pattern: '*.*'
        ]
    }

}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    test {
        params {
            sample_id = 'PC01'
            ubam  = 'test_data/porec_test.concatemers.bam'
            ref   = 'test_data/porec_test.fasta'
            cutter = 'NlaIII'
            vcf = 'test_data/porec_test.phased_variants.vcf.gz'
            chunk_size = 500
            pairs = true
            mcool = true
            cool_bin_size = 10
            mcool_resolutions = '10,50,100'
            coverage = true
        }
    }
    test_sample_sheet {
        params {
            sample_sheet  = 'test_data/sample_sheet.csv'
            ref   = 'test_data/porec_test.fasta'
            chunk_size = 100
        }
    }
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    // profile using conda environments
    conda {
        docker.enabled = false
        process {
            conda = "${projectDir}/environment.yaml"
            //withLabel:wftemplate {
            //    conda = "${projectDir}/environment.yaml"
            //}
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
            enabled = true // required for 22.08
            cacheDir = ''
            useMamba = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wftemplate {
                container = "${params.aws_image_prefix}-wf-template:${params.wf.container_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

timeline {
    enabled = true
    file = "${params.out_dir}/execution/timeline.html"
}
report {
    enabled = true
    file = "${params.out_dir}/execution/report.html"
}
trace {
    enabled = true
    file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
}
